// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Input /> should change the value on user input 1`] = `
<Component
  value="My initial value"
>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value="My initial value"
  >
    <input
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value="My initial value"
    />
  </Input>
</Component>
`;

exports[`<Input /> should focus the input 1`] = `
<Component
  onFocusChange={[Function]}
>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value=""
    />
  </Input>
</Component>
`;

exports[`<Input /> should receive the correct value while typing 1`] = `
<Component>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value="foobar"
    />
  </Input>
</Component>
`;

exports[`<Input /> should render a multiline input with empty content and react on change 1`] = `
<Component
  multiLine={true}
  value=""
>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={true}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <textarea
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value=""
    />
  </Input>
</Component>
`;

exports[`<Input /> should render a simple input field 1`] = `
<Component>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value=""
    />
  </Input>
</Component>
`;

exports[`<Input /> should render the input as password 1`] = `
<Input
  className=""
  disabled={false}
  id={null}
  multiLine={false}
  name={null}
  onChange={[Function]}
  onFocusChange={[Function]}
  onSanitize={[Function]}
  onValidate={[Function]}
  password={true}
  setRef={[Function]}
  type="text"
  validateOnBlur={true}
  value=""
/>
`;

exports[`<Input /> should render the input with a default value 1`] = `
<Input
  className=""
  disabled={false}
  id={null}
  multiLine={false}
  name={null}
  onChange={[Function]}
  onFocusChange={[Function]}
  onSanitize={[Function]}
  onValidate={[Function]}
  password={false}
  setRef={[Function]}
  type="text"
  validateOnBlur={true}
  value="FooBar"
/>
`;

exports[`<Input /> should sanitize the input 1`] = `
<Component
  onSanitize={[Function]}
>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value="FOOBAR"
    />
  </Input>
</Component>
`;

exports[`<Input /> should trigger the onChange callback 1`] = `
<Component
  onChange={[Function]}
>
  <Input
    className=""
    disabled={false}
    id={null}
    multiLine={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value="a"
    />
  </Input>
</Component>
`;

exports[`<Input /> should validate the input 1`] = `
<Input
  className=""
  disabled={false}
  id={null}
  multiLine={false}
  name={null}
  onChange={[Function]}
  onFocusChange={[Function]}
  onSanitize={[Function]}
  onValidate={[Function]}
  password={false}
  setRef={[Function]}
  type="text"
  validateOnBlur={true}
  value=""
/>
`;
