// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TabBar /> should not render when invisible 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(TabBar)>
    <TabBar
      activeTab="cart"
      cartProductCount={0}
      dispatch={[Function]}
      isVisible={false}
      path="/cart"
      visibleTabs={
        Array [
          Object {
            "label": "tab_bar.home",
            "type": "home",
          },
          Object {
            "label": "tab_bar.browse",
            "type": "browse",
          },
          Object {
            "label": "tab_bar.cart",
            "type": "cart",
          },
          Object {
            "label": "tab_bar.favorites",
            "type": "favorites",
          },
          Object {
            "label": "tab_bar.more",
            "type": "more",
          },
        ]
      }
    />
  </Connect(TabBar)>
</Provider>
`;

exports[`<TabBar /> should render when visible 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(TabBar)>
    <TabBar
      activeTab="home"
      cartProductCount={0}
      dispatch={[Function]}
      isVisible={true}
      path="/"
      visibleTabs={
        Array [
          Object {
            "label": "tab_bar.home",
            "type": "home",
          },
          Object {
            "label": "tab_bar.browse",
            "type": "browse",
          },
          Object {
            "label": "tab_bar.cart",
            "type": "cart",
          },
          Object {
            "label": "tab_bar.favorites",
            "type": "favorites",
          },
          Object {
            "label": "tab_bar.more",
            "type": "more",
          },
        ]
      }
    >
      <Grid
        className="css-rnnn5r"
        component="ul"
        wrap={false}
      >
        <ul
          className="css-rnnn5r css-h7r55a"
        >
          <TabBarHomeAction
            icon={null}
            isHighlighted={true}
            key="home"
            label="tab_bar.home"
            onClick={null}
            path="/"
            type="home"
          >
            <TabBarAction
              icon={
                <mockedPortal
                  name="tabbar.home-icon"
                >
                  <Home
                    className="css-1rqxdrd"
                  />
                </mockedPortal>
              }
              isHighlighted={true}
              label="tab_bar.home"
              onClick={[Function]}
              path="/"
              type="home"
            >
              <Button
                className="css-1kz5xrj css-7rfn3t"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  className="css-1kz5xrj css-7rfn3t css-1rn65c0"
                  data-test-id="Button"
                  disabled={false}
                  onClick={[Function]}
                >
                  <mockedPortal
                    name="tabbar.home-icon"
                  />
                  <div
                    className="css-1oe88ku"
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="tab_bar.home"
                    >
                      <span
                        className=""
                      >
                        tab_bar.home
                      </span>
                    </Translate>
                  </div>
                </button>
              </Button>
            </TabBarAction>
          </TabBarHomeAction>
          <TabBarBrowseAction
            icon={null}
            isHighlighted={false}
            key="browse"
            label="tab_bar.browse"
            onClick={null}
            path="/"
            type="browse"
          >
            <TabBarAction
              icon={
                <mockedPortal
                  name="tabbar.browse-icon"
                >
                  <Browse
                    className="css-1g4dstu"
                  />
                </mockedPortal>
              }
              isHighlighted={false}
              label="tab_bar.browse"
              onClick={[Function]}
              path="/"
              type="browse"
            >
              <Button
                className="css-1kz5xrj css-1livkh4"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  className="css-1kz5xrj css-1livkh4 css-1rn65c0"
                  data-test-id="Button"
                  disabled={false}
                  onClick={[Function]}
                >
                  <mockedPortal
                    name="tabbar.browse-icon"
                  />
                  <div
                    className="css-1oe88ku"
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="tab_bar.browse"
                    >
                      <span
                        className=""
                      >
                        tab_bar.browse
                      </span>
                    </Translate>
                  </div>
                </button>
              </Button>
            </TabBarAction>
          </TabBarBrowseAction>
          <TabBarCartAction
            icon={null}
            isHighlighted={false}
            key="cart"
            label="tab_bar.cart"
            onClick={null}
            path="/"
            type="cart"
          >
            <TabBarAction
              icon={
                <mockedPortal
                  name="tabbar.cart-icon"
                >
                  <CartIcon
                    className="css-betil4"
                  />
                </mockedPortal>
              }
              isHighlighted={false}
              label="tab_bar.cart"
              onClick={[Function]}
              path="/"
              type="cart"
            >
              <Button
                className="css-1kz5xrj css-1livkh4"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  className="css-1kz5xrj css-1livkh4 css-1rn65c0"
                  data-test-id="Button"
                  disabled={false}
                  onClick={[Function]}
                >
                  <mockedPortal
                    name="tabbar.cart-icon"
                  />
                  <div
                    className="css-1oe88ku"
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="tab_bar.cart"
                    >
                      <span
                        className=""
                      >
                        tab_bar.cart
                      </span>
                    </Translate>
                  </div>
                  <Connect(CartItemBadge)>
                    <CartItemBadge
                      cartProductCount={0}
                      dispatch={[Function]}
                    />
                  </Connect(CartItemBadge)>
                </button>
              </Button>
            </TabBarAction>
          </TabBarCartAction>
          <TabBarFavoritesAction
            icon={null}
            isHighlighted={false}
            key="favorites"
            label="tab_bar.favorites"
            onClick={null}
            path="/"
            type="favorites"
          >
            <TabBarAction
              icon={
                <mockedPortal
                  name="tabbar.heart-icon"
                >
                  <Heart
                    className="css-yrjpmv"
                  />
                </mockedPortal>
              }
              isHighlighted={false}
              label="tab_bar.favorites"
              onClick={[Function]}
              path="/"
              type="favorites"
            >
              <Button
                className="css-1kz5xrj css-1livkh4"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  className="css-1kz5xrj css-1livkh4 css-1rn65c0"
                  data-test-id="Button"
                  disabled={false}
                  onClick={[Function]}
                >
                  <mockedPortal
                    name="tabbar.heart-icon"
                  />
                  <div
                    className="css-1oe88ku"
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="tab_bar.favorites"
                    >
                      <span
                        className=""
                      >
                        tab_bar.favorites
                      </span>
                    </Translate>
                  </div>
                  <Connect(FavoritesIconBadge)>
                    <FavoritesIconBadge
                      dispatch={[Function]}
                      favoritesCount={0}
                    />
                  </Connect(FavoritesIconBadge)>
                </button>
              </Button>
            </TabBarAction>
          </TabBarFavoritesAction>
          <TabBarMoreAction
            icon={null}
            isHighlighted={false}
            key="more"
            label="tab_bar.more"
            onClick={null}
            path="/"
            type="more"
          >
            <TabBarAction
              icon={
                <mockedPortal
                  name="tabbar.more-icon"
                >
                  <More
                    className="css-yrjpmv"
                  />
                </mockedPortal>
              }
              isHighlighted={false}
              label="tab_bar.more"
              onClick={[Function]}
              path="/"
              type="more"
            >
              <Button
                className="css-1kz5xrj css-1livkh4"
                disabled={false}
                onClick={[Function]}
              >
                <button
                  className="css-1kz5xrj css-1livkh4 css-1rn65c0"
                  data-test-id="Button"
                  disabled={false}
                  onClick={[Function]}
                >
                  <mockedPortal
                    name="tabbar.more-icon"
                  />
                  <div
                    className="css-1oe88ku"
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="tab_bar.more"
                    >
                      <span
                        className=""
                      >
                        tab_bar.more
                      </span>
                    </Translate>
                  </div>
                </button>
              </Button>
            </TabBarAction>
          </TabBarMoreAction>
        </ul>
      </Grid>
    </TabBar>
  </Connect(TabBar)>
</Provider>
`;
