// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TabBar /> should not render when invisible 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(TabBar)>
    <TabBar
      activeTab="cart"
      cartProductCount={0}
      dispatch={[Function]}
      isVisible={false}
      path="/cart"
      visibleTabs={
        Array [
          Object {
            "label": "tab_bar.home",
            "type": "home",
          },
          Object {
            "label": "tab_bar.browse",
            "type": "browse",
          },
          Object {
            "label": "tab_bar.cart",
            "type": "cart",
          },
          Object {
            "label": "tab_bar.favorites",
            "type": "favorites",
          },
          Object {
            "label": "tab_bar.more",
            "type": "more",
          },
        ]
      }
    />
  </Connect(TabBar)>
</Provider>
`;

exports[`<TabBar /> should render when visible 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(TabBar)>
    <TabBar
      activeTab="home"
      cartProductCount={0}
      dispatch={[Function]}
      isVisible={true}
      path="/"
      visibleTabs={
        Array [
          Object {
            "label": "tab_bar.home",
            "type": "home",
          },
          Object {
            "label": "tab_bar.browse",
            "type": "browse",
          },
          Object {
            "label": "tab_bar.cart",
            "type": "cart",
          },
          Object {
            "label": "tab_bar.favorites",
            "type": "favorites",
          },
          Object {
            "label": "tab_bar.more",
            "type": "more",
          },
        ]
      }
    >
      <Grid
        className="css-rnnn5r"
        component="ul"
        wrap={false}
      >
        <ul
          className="css-rnnn5r css-h7r55a"
        >
          <TabBarHomeAction
            icon={null}
            isHighlighted={true}
            key="home"
            label="tab_bar.home"
            onClick={null}
            path="/"
            type="home"
          >
            <mockedPortal
              name="tab-bar.home.before"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": true,
                  "label": "tab_bar.home",
                  "onClick": null,
                  "path": "/",
                  "type": "home",
                }
              }
            />
            <mockedPortal
              name="tab-bar.home"
              props={
                Object {
                  "TabBarAction": [Function],
                  "children": null,
                  "icon": null,
                  "isHighlighted": true,
                  "label": "tab_bar.home",
                  "onClick": null,
                  "path": "/",
                  "type": "home",
                }
              }
            />
            <mockedPortal
              name="tab-bar.home.after"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": true,
                  "label": "tab_bar.home",
                  "onClick": null,
                  "path": "/",
                  "type": "home",
                }
              }
            />
          </TabBarHomeAction>
          <TabBarBrowseAction
            icon={null}
            isHighlighted={false}
            key="browse"
            label="tab_bar.browse"
            onClick={null}
            path="/"
            type="browse"
          >
            <mockedPortal
              name="tab-bar.browse.before"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.browse",
                  "onClick": null,
                  "path": "/",
                  "type": "browse",
                }
              }
            />
            <mockedPortal
              name="tab-bar.browse"
              props={
                Object {
                  "TabBarAction": [Function],
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.browse",
                  "onClick": null,
                  "path": "/",
                  "type": "browse",
                }
              }
            />
            <mockedPortal
              name="tab-bar.browse.after"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.browse",
                  "onClick": null,
                  "path": "/",
                  "type": "browse",
                }
              }
            />
          </TabBarBrowseAction>
          <TabBarCartAction
            icon={null}
            isHighlighted={false}
            key="cart"
            label="tab_bar.cart"
            onClick={null}
            path="/"
            type="cart"
          >
            <mockedPortal
              name="tab-bar.cart.before"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.cart",
                  "onClick": null,
                  "path": "/",
                  "type": "cart",
                }
              }
            />
            <mockedPortal
              name="tab-bar.cart"
              props={
                Object {
                  "TabBarAction": [Function],
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.cart",
                  "onClick": null,
                  "path": "/",
                  "type": "cart",
                }
              }
            />
            <mockedPortal
              name="tab-bar.cart.after"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.cart",
                  "onClick": null,
                  "path": "/",
                  "type": "cart",
                }
              }
            />
          </TabBarCartAction>
          <TabBarFavoritesAction
            icon={null}
            isHighlighted={false}
            key="favorites"
            label="tab_bar.favorites"
            onClick={null}
            path="/"
            type="favorites"
          >
            <mockedPortal
              name="tab-bar.favorites.before"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.favorites",
                  "onClick": null,
                  "path": "/",
                  "type": "favorites",
                }
              }
            />
            <mockedPortal
              name="tab-bar.favorites"
              props={
                Object {
                  "TabBarAction": [Function],
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.favorites",
                  "onClick": null,
                  "path": "/",
                  "type": "favorites",
                }
              }
            />
            <mockedPortal
              name="tab-bar.favorites.after"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.favorites",
                  "onClick": null,
                  "path": "/",
                  "type": "favorites",
                }
              }
            />
          </TabBarFavoritesAction>
          <TabBarMoreAction
            icon={null}
            isHighlighted={false}
            key="more"
            label="tab_bar.more"
            onClick={null}
            path="/"
            type="more"
          >
            <mockedPortal
              name="tab-bar.more.before"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.more",
                  "onClick": null,
                  "path": "/",
                  "type": "more",
                }
              }
            />
            <mockedPortal
              name="tab-bar.more"
              props={
                Object {
                  "TabBarAction": [Function],
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.more",
                  "onClick": null,
                  "path": "/",
                  "type": "more",
                }
              }
            />
            <mockedPortal
              name="tab-bar.more.after"
              props={
                Object {
                  "children": null,
                  "icon": null,
                  "isHighlighted": false,
                  "label": "tab_bar.more",
                  "onClick": null,
                  "path": "/",
                  "type": "more",
                }
              }
            />
          </TabBarMoreAction>
        </ul>
      </Grid>
    </TabBar>
  </Connect(TabBar)>
</Provider>
`;
