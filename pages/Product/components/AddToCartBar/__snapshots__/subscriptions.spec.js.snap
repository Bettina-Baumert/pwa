// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddToCartBar subscriptions and actions should handle subscribers 1`] = `
Object {
  "calls": Array [
    Array [
      AnonymousSubject {
        "_isScalar": false,
        "closed": false,
        "destination": AnonymousSubject {
          "_isScalar": false,
          "closed": false,
          "destination": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "operator": MapOperator {
            "project": [Function],
            "thisArg": undefined,
          },
          "source": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "thrownError": null,
        },
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "operator": FilterOperator {
          "predicate": [Function],
          "thisArg": undefined,
        },
        "source": AnonymousSubject {
          "_isScalar": false,
          "closed": false,
          "destination": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "operator": MapOperator {
            "project": [Function],
            "thisArg": undefined,
          },
          "source": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "thrownError": null,
        },
        "thrownError": null,
      },
      [Function],
    ],
    Array [
      AnonymousSubject {
        "_isScalar": false,
        "closed": false,
        "destination": AnonymousSubject {
          "_isScalar": false,
          "closed": false,
          "destination": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "operator": MapOperator {
            "project": [Function],
            "thisArg": undefined,
          },
          "source": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "thrownError": null,
        },
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "operator": FilterOperator {
          "predicate": [Function],
          "thisArg": undefined,
        },
        "source": AnonymousSubject {
          "_isScalar": false,
          "closed": false,
          "destination": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "operator": MapOperator {
            "project": [Function],
            "thisArg": undefined,
          },
          "source": AnonymousSubject {
            "_isScalar": false,
            "closed": false,
            "destination": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "operator": FilterOperator {
              "predicate": [Function],
              "thisArg": undefined,
            },
            "source": AnonymousSubject {
              "_isScalar": false,
              "closed": false,
              "destination": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "operator": FilterOperator {
                "predicate": [Function],
                "thisArg": undefined,
              },
              "source": Subject {
                "_isScalar": false,
                "closed": false,
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "thrownError": null,
              },
              "thrownError": null,
            },
            "thrownError": null,
          },
          "thrownError": null,
        },
        "thrownError": null,
      },
      [Function],
    ],
    Array [
      AnonymousSubject {
        "_isScalar": false,
        "closed": false,
        "destination": Observable {
          "_isScalar": false,
          "operator": MergeMapOperator {
            "concurrent": Infinity,
            "project": [Function],
            "resultSelector": null,
          },
          "source": ArrayObservable {
            "_isScalar": false,
            "array": Array [
              AnonymousSubject {
                "_isScalar": false,
                "closed": false,
                "destination": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "operator": SwitchMapOperator {
                  "project": [Function],
                  "resultSelector": undefined,
                },
                "source": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "thrownError": null,
              },
              AnonymousSubject {
                "_isScalar": false,
                "closed": false,
                "destination": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "operator": FilterOperator {
                  "predicate": [Function],
                  "thisArg": undefined,
                },
                "source": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "thrownError": null,
              },
            ],
            "scheduler": null,
          },
        },
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "operator": undefined,
        "source": Observable {
          "_isScalar": false,
          "operator": MergeMapOperator {
            "concurrent": Infinity,
            "project": [Function],
            "resultSelector": null,
          },
          "source": ArrayObservable {
            "_isScalar": false,
            "array": Array [
              AnonymousSubject {
                "_isScalar": false,
                "closed": false,
                "destination": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "operator": SwitchMapOperator {
                  "project": [Function],
                  "resultSelector": undefined,
                },
                "source": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "thrownError": null,
              },
              AnonymousSubject {
                "_isScalar": false,
                "closed": false,
                "destination": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "hasError": false,
                "isStopped": false,
                "observers": Array [],
                "operator": FilterOperator {
                  "predicate": [Function],
                  "thisArg": undefined,
                },
                "source": AnonymousSubject {
                  "_isScalar": false,
                  "closed": false,
                  "destination": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "hasError": false,
                  "isStopped": false,
                  "observers": Array [],
                  "operator": FilterOperator {
                    "predicate": [Function],
                    "thisArg": undefined,
                  },
                  "source": Subject {
                    "_isScalar": false,
                    "closed": false,
                    "hasError": false,
                    "isStopped": false,
                    "observers": Array [],
                    "thrownError": null,
                  },
                  "thrownError": null,
                },
                "thrownError": null,
              },
            ],
            "scheduler": null,
          },
        },
        "thrownError": null,
      },
      [Function],
    ],
    Array [
      AnonymousSubject {
        "_isScalar": false,
        "closed": false,
        "destination": Subject {
          "_isScalar": false,
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "operator": FilterOperator {
          "predicate": [Function],
          "thisArg": undefined,
        },
        "source": Subject {
          "_isScalar": false,
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "thrownError": null,
      },
      [Function],
    ],
    Array [
      AnonymousSubject {
        "_isScalar": false,
        "closed": false,
        "destination": AnonymousSubject {
          "_isScalar": false,
          "closed": false,
          "destination": Subject {
            "_isScalar": false,
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "operator": FilterOperator {
            "predicate": [Function],
            "thisArg": undefined,
          },
          "source": Subject {
            "_isScalar": false,
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
          "thrownError": null,
        },
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "operator": FilterOperator {
          "predicate": [Function],
          "thisArg": undefined,
        },
        "source": AnonymousSubject {
          "_isScalar": false,
          "closed": false,
          "destination": Subject {
            "_isScalar": false,
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "operator": FilterOperator {
            "predicate": [Function],
            "thisArg": undefined,
          },
          "source": Subject {
            "_isScalar": false,
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
          "thrownError": null,
        },
        "thrownError": null,
      },
      [Function],
    ],
  ],
  "instances": Array [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
  ],
  "timestamps": Array [
    1520958759653,
    1520958759653,
    1520958759653,
    1520958759653,
    1520958759653,
  ],
}
`;
